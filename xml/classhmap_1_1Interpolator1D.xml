<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classhmap_1_1Interpolator1D" kind="class" language="C++" prot="public">
    <compoundname>hmap::Interpolator1D</compoundname>
    <includes refid="interpolate1d_8hpp" local="no">interpolate1d.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhmap_1_1Interpolator1D_1ac8915becfa63f098c2c61fcfe5ae22e3" prot="private" static="no" mutable="no">
        <type>gsl_spline *</type>
        <definition>gsl_spline* hmap::Interpolator1D::interp</definition>
        <argsstring></argsstring>
        <name>interp</name>
        <qualifiedname>hmap::Interpolator1D::interp</qualifiedname>
        <briefdescription>
<para>GSL spline object used for interpolation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="117" column="22" bodyfile="HighMap/include/highmap/interpolate1d.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Interpolator1D_1af471e64b2d1cd93a8ad65d0c10500af7" prot="private" static="no" mutable="no">
        <type>gsl_interp_accel *</type>
        <definition>gsl_interp_accel* hmap::Interpolator1D::accel_</definition>
        <argsstring></argsstring>
        <name>accel_</name>
        <qualifiedname>hmap::Interpolator1D::accel_</qualifiedname>
        <briefdescription>
<para>GSL interpolation accelerator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="118" column="22" bodyfile="HighMap/include/highmap/interpolate1d.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Interpolator1D_1a76b84994b799d84b0b14873672d6eb11" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; hmap::Interpolator1D::x_data</definition>
        <argsstring></argsstring>
        <name>x_data</name>
        <qualifiedname>hmap::Interpolator1D::x_data</qualifiedname>
        <briefdescription>
<para>x data converted to double for GSL </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="119" column="15" bodyfile="HighMap/include/highmap/interpolate1d.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Interpolator1D_1aa234d94953cf71386c5c76f251b9f7f5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; hmap::Interpolator1D::y_data</definition>
        <argsstring></argsstring>
        <name>y_data</name>
        <qualifiedname>hmap::Interpolator1D::y_data</qualifiedname>
        <briefdescription>
<para>y data converted to double for GSL </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="120" column="15" bodyfile="HighMap/include/highmap/interpolate1d.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Interpolator1D_1aed2c6a9284cc22d957b2acfea43fcf97" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hmap::Interpolator1D::xmin</definition>
        <argsstring></argsstring>
        <name>xmin</name>
        <qualifiedname>hmap::Interpolator1D::xmin</qualifiedname>
        <briefdescription>
<para>Minimum x value in the data set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="121" column="23" bodyfile="HighMap/include/highmap/interpolate1d.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Interpolator1D_1a9564f0b5b0f67bb27dcbeb2dab844d21" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double hmap::Interpolator1D::xmax</definition>
        <argsstring></argsstring>
        <name>xmax</name>
        <qualifiedname>hmap::Interpolator1D::xmax</qualifiedname>
        <briefdescription>
<para>Maximum x value in the data set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="122" column="23" bodyfile="HighMap/include/highmap/interpolate1d.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classhmap_1_1Interpolator1D_1aa44413e63632c955aacb403ab71f247f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hmap::Interpolator1D::Interpolator1D</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;x, const std::vector&lt; float &gt; &amp;y, InterpolationMethod1D method=InterpolationMethod1D::LINEAR)</argsstring>
        <name>Interpolator1D</name>
        <qualifiedname>hmap::Interpolator1D::Interpolator1D</qualifiedname>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="namespacehmap_1a46291bb4766800deacc1ce9b45a9ea6b" kindref="member">InterpolationMethod1D</ref></type>
          <declname>method</declname>
          <defval><ref refid="namespacehmap_1a46291bb4766800deacc1ce9b45a9ea6ba26ec6481025765e03b9c750137bd9d84" kindref="member">InterpolationMethod1D::LINEAR</ref></defval>
        </param>
        <briefdescription>
<para>Constructs an <computeroutput><ref refid="classhmap_1_1Interpolator1D" kindref="compound">Interpolator1D</ref></computeroutput> object with the given data and method. </para>
        </briefdescription>
        <detaileddescription>
<para>This constructor initializes the interpolation object with the provided x and y data points and the specified interpolation method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of x coordinates (independent variable). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of y coordinates (dependent variable). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>The interpolation method to use (default is linear).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argumentifxandyhavedifferentsizesoriftherearefewerthan</parametername>
</parameternamelist>
<parameterdescription>
<para>two points. An exception is also thrown if the method requires monotonic data and the provided data is not monotonic. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="82" column="3" bodyfile="HighMap/src/interpolate/interpolate1d.cpp" bodystart="26" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Interpolator1D_1afce7ba6809a4c7b28a561c7c646227e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hmap::Interpolator1D::~Interpolator1D</definition>
        <argsstring>()</argsstring>
        <name>~Interpolator1D</name>
        <qualifiedname>hmap::Interpolator1D::~Interpolator1D</qualifiedname>
        <briefdescription>
<para>Destructor for <computeroutput><ref refid="classhmap_1_1Interpolator1D" kindref="compound">Interpolator1D</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The destructor frees the GSL resources used by the interpolation object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="91" column="3" bodyfile="HighMap/src/interpolate/interpolate1d.cpp" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Interpolator1D_1a47dab539e9e8ce30c350278d01dfb1aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float hmap::Interpolator1D::operator()</definition>
        <argsstring>(float x) const</argsstring>
        <name>operator()</name>
        <qualifiedname>hmap::Interpolator1D::operator()</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para><ref refid="classhmap_1_1Function" kindref="compound">Function</ref> call operator for performing interpolation. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator overload allows the <computeroutput><ref refid="classhmap_1_1Interpolator1D" kindref="compound">Interpolator1D</ref></computeroutput> object to be called as a function, directly returning the interpolated value at the specified x coordinate. It serves as a shorthand for the <computeroutput><ref refid="classhmap_1_1Interpolator1D_1a1ab067195430386cae3158bfccf4847f" kindref="member">interpolate()</ref></computeroutput> method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate at which to interpolate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The interpolated y value corresponding to the given x. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="103" column="9" bodyfile="HighMap/src/interpolate/interpolate1d.cpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Interpolator1D_1a1ab067195430386cae3158bfccf4847f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float hmap::Interpolator1D::interpolate</definition>
        <argsstring>(float x) const</argsstring>
        <name>interpolate</name>
        <qualifiedname>hmap::Interpolator1D::interpolate</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Interpolates the value at the specified x coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para>This function computes the interpolated y value corresponding to the given x coordinate using the previously specified interpolation method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate at which to interpolate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The interpolated y value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/interpolate1d.hpp" line="114" column="9" bodyfile="HighMap/src/interpolate/interpolate1d.cpp" bodystart="104" bodyend="110"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class for performing 1D interpolation using the GSL library. </para>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput><ref refid="classhmap_1_1Interpolator1D" kindref="compound">Interpolator1D</ref></computeroutput> class provides an interface for performing 1D interpolation on a set of data points. The interpolation methods supported are defined by the <computeroutput>InterpolationMethod1D</computeroutput> enumeration. The class uses the GSL library for the interpolation computations.</para>
<para><bold>Example</bold> <programlisting filename="ex_interpolate1d.cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="highmap_8hpp" kindref="compound">highmap.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>x<sp/>=<sp/>{0.f,<sp/>0.1f,<sp/>0.5f,<sp/>0.7f,<sp/>1.f};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>y<sp/>=<sp/>{0.2f,<sp/>0.1f,<sp/>0.5f,<sp/>0.6f,<sp/>0.4f};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>xi<sp/>=<sp/><ref refid="namespacehmap_1a3957ac4ae673f8ad402b5dd71e99b015" kindref="member">hmap::linspace</ref>(0.f,<sp/>1.f,<sp/>50);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classhmap_1_1Interpolator1D" kindref="compound">hmap::Interpolator1D</ref><sp/>fl<sp/>=<sp/><ref refid="classhmap_1_1Interpolator1D" kindref="compound">hmap::Interpolator1D</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehmap_1a46291bb4766800deacc1ce9b45a9ea6ba26ec6481025765e03b9c750137bd9d84" kindref="member">hmap::InterpolationMethod1D::LINEAR</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classhmap_1_1Interpolator1D" kindref="compound">hmap::Interpolator1D</ref><sp/>fc<sp/>=<sp/><ref refid="classhmap_1_1Interpolator1D" kindref="compound">hmap::Interpolator1D</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehmap_1a46291bb4766800deacc1ce9b45a9ea6ba212e7c8d91a9697cccd7df7d006a5547" kindref="member">hmap::InterpolationMethod1D::CUBIC</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classhmap_1_1Interpolator1D" kindref="compound">hmap::Interpolator1D</ref><sp/>fa<sp/>=<sp/><ref refid="classhmap_1_1Interpolator1D" kindref="compound">hmap::Interpolator1D</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehmap_1a46291bb4766800deacc1ce9b45a9ea6ba55d2df97f3e8f051fb84453093374c96" kindref="member">hmap::InterpolationMethod1D::AKIMA</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>yl,<sp/>yc,<sp/>ya;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;x_<sp/>:<sp/>xi)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>yl.push_back(fl(x_));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>yc.push_back(fc(x_));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ya.push_back(fa(x_));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>v<sp/>=<sp/>std::vector&lt;float&gt;(xi.size(),<sp/>1.f);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classhmap_1_1Path" kindref="compound">hmap::Path</ref>(xi,<sp/>yl,<sp/>v).<ref refid="classhmap_1_1Path_1a2275418077ab50d95c0be6c5b27b21a6" kindref="member">to_png</ref>(</highlight><highlight class="stringliteral">&quot;ex_interpolate1d_0.png&quot;</highlight><highlight class="normal">,<sp/>{128,<sp/>128});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classhmap_1_1Path" kindref="compound">hmap::Path</ref>(xi,<sp/>yc,<sp/>v).<ref refid="classhmap_1_1Path_1a2275418077ab50d95c0be6c5b27b21a6" kindref="member">to_png</ref>(</highlight><highlight class="stringliteral">&quot;ex_interpolate1d_1.png&quot;</highlight><highlight class="normal">,<sp/>{128,<sp/>128});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classhmap_1_1Path" kindref="compound">hmap::Path</ref>(xi,<sp/>ya,<sp/>v).<ref refid="classhmap_1_1Path_1a2275418077ab50d95c0be6c5b27b21a6" kindref="member">to_png</ref>(</highlight><highlight class="stringliteral">&quot;ex_interpolate1d_2.png&quot;</highlight><highlight class="normal">,<sp/>{128,<sp/>128});</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><bold>Result</bold> <image type="html" name="ex_interpolate1d_0.png"></image>
 <image type="html" name="ex_interpolate1d_1.png"></image>
 <image type="html" name="ex_interpolate1d_2.png"></image>
 </para>
    </detaileddescription>
    <location file="HighMap/include/highmap/interpolate1d.hpp" line="64" column="1" bodyfile="HighMap/include/highmap/interpolate1d.hpp" bodystart="65" bodyend="123"/>
    <listofallmembers>
      <member refid="classhmap_1_1Interpolator1D_1af471e64b2d1cd93a8ad65d0c10500af7" prot="private" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>accel_</name></member>
      <member refid="classhmap_1_1Interpolator1D_1ac8915becfa63f098c2c61fcfe5ae22e3" prot="private" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>interp</name></member>
      <member refid="classhmap_1_1Interpolator1D_1a1ab067195430386cae3158bfccf4847f" prot="public" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>interpolate</name></member>
      <member refid="classhmap_1_1Interpolator1D_1aa44413e63632c955aacb403ab71f247f" prot="public" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>Interpolator1D</name></member>
      <member refid="classhmap_1_1Interpolator1D_1a47dab539e9e8ce30c350278d01dfb1aa" prot="public" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>operator()</name></member>
      <member refid="classhmap_1_1Interpolator1D_1a76b84994b799d84b0b14873672d6eb11" prot="private" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>x_data</name></member>
      <member refid="classhmap_1_1Interpolator1D_1a9564f0b5b0f67bb27dcbeb2dab844d21" prot="private" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>xmax</name></member>
      <member refid="classhmap_1_1Interpolator1D_1aed2c6a9284cc22d957b2acfea43fcf97" prot="private" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>xmin</name></member>
      <member refid="classhmap_1_1Interpolator1D_1aa234d94953cf71386c5c76f251b9f7f5" prot="private" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>y_data</name></member>
      <member refid="classhmap_1_1Interpolator1D_1afce7ba6809a4c7b28a561c7c646227e3" prot="public" virt="non-virtual"><scope>hmap::Interpolator1D</scope><name>~Interpolator1D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
