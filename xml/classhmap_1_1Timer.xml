<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classhmap_1_1Timer" kind="class" language="C++" prot="public">
    <compoundname>hmap::Timer</compoundname>
    <includes refid="timer_8hpp" local="no">timer.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhmap_1_1Timer_1aac51dbbcb2b7ea63765c0f95764f27cb" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hmap::Timer::sid</definition>
        <argsstring></argsstring>
        <name>sid</name>
        <qualifiedname>hmap::Timer::sid</qualifiedname>
        <briefdescription>
<para>An optional identifier for the <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="175" column="15" bodyfile="HighMap/include/highmap/dbg/timer.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Timer_1a8c20307901af959c421349c957149edf" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="structhmap_1_1Recorder" kindref="compound">Recorder</ref> * &gt;</type>
        <definition>std::map&lt;std::string, Recorder *&gt; hmap::Timer::records</definition>
        <argsstring></argsstring>
        <name>records</name>
        <qualifiedname>hmap::Timer::records</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A map of event names to their corresponding <ref refid="structhmap_1_1Recorder" kindref="compound">Recorder</ref> objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="177" column="7" bodyfile="HighMap/include/highmap/dbg/timer.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Timer_1a0a43e982ca540f6aef0431e5c826d73a" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="structhmap_1_1Recorder" kindref="compound">Recorder</ref> &gt;</type>
        <definition>std::list&lt;Recorder&gt; hmap::Timer::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>hmap::Timer::data</qualifiedname>
        <briefdescription>
<para>A list of <ref refid="structhmap_1_1Recorder" kindref="compound">Recorder</ref> objects that store timing information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="180" column="7" bodyfile="HighMap/include/highmap/dbg/timer.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Timer_1a36e7f8cbc2e057e612d5ae75708bd047" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int hmap::Timer::current_level</definition>
        <argsstring></argsstring>
        <name>current_level</name>
        <qualifiedname>hmap::Timer::current_level</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Current nesting level (if applicable). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="181" column="7" bodyfile="HighMap/include/highmap/dbg/timer.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhmap_1_1Timer_1a576626db87904b2c0937e8441fee866f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>Timer &amp; hmap::Timer::get_instance</definition>
        <argsstring>()</argsstring>
        <name>get_instance</name>
        <qualifiedname>hmap::Timer::get_instance</qualifiedname>
        <briefdescription>
<para>Gets the singleton instance of the <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref>&amp; Reference to the singleton instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="110" column="16" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1ae9248cf01bfd4d8f680a6c7d5b80f45b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Timer::Start</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>Start</name>
        <qualifiedname>hmap::Timer::Start</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Starts a timer for the specified event name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the event to start timing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="117" column="15" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1a6054c197a10338a1bd48299be29593b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Timer::Stop</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>Stop</name>
        <qualifiedname>hmap::Timer::Stop</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Stops the timer for the specified event name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the event to stop timing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="124" column="15" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1a5bc931885a549c561740f39cea91dd5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Timer::Dump</definition>
        <argsstring>()</argsstring>
        <name>Dump</name>
        <qualifiedname>hmap::Timer::Dump</qualifiedname>
        <briefdescription>
<para>Dumps the timing information for all recorded events to the console. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="129" column="15" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classhmap_1_1Timer_1ae06258adb9e67342e56835291be5226f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; std::string, <ref refid="structhmap_1_1Recorder" kindref="compound">Recorder</ref> * &gt;</type>
        <definition>std::map&lt; std::string, Recorder * &gt; hmap::Timer::get_records</definition>
        <argsstring>() const</argsstring>
        <name>get_records</name>
        <qualifiedname>hmap::Timer::get_records</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="131" column="12" bodyfile="HighMap/include/highmap/dbg/timer.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classhmap_1_1Timer_1a4c0ef1d1db349e81c10e02fe0ac1f7c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hmap::Timer::Timer</definition>
        <argsstring>(std::string sid=&quot;&quot;)</argsstring>
        <name>Timer</name>
        <qualifiedname>hmap::Timer::Timer</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>sid</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> object. This constructor is private to enforce the singleton pattern. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sid</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional identifier for the <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="143" column="3" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1afc99134cd46af9daf06e839e00aa3377" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hmap::Timer::~Timer</definition>
        <argsstring>()</argsstring>
        <name>~Timer</name>
        <qualifiedname>hmap::Timer::~Timer</qualifiedname>
        <briefdescription>
<para>Destroys the <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> object and dumps all timing data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="148" column="3" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1a66f4e7acf993ec753be07068df3b04f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Timer::start</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>start</name>
        <qualifiedname>hmap::Timer::start</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Starts a timer for the specified event name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the event to start timing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="155" column="8" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="71" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1ab70219d97b7645acbe66d8f561a20002" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Timer::stop</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>stop</name>
        <qualifiedname>hmap::Timer::stop</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Stops the timer for the specified event name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the event to stop timing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="162" column="8" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="82" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1a481d5be843951470a8e097d57a64710a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Timer::dump</definition>
        <argsstring>()</argsstring>
        <name>dump</name>
        <qualifiedname>hmap::Timer::dump</qualifiedname>
        <briefdescription>
<para>Dumps the timing information for all recorded events to the console. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="167" column="8" bodyfile="HighMap/src/dbg/timer.cpp" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1a9196eeb51f985b033772f417479b1e4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hmap::Timer::Timer</definition>
        <argsstring>(const Timer &amp;)=delete</argsstring>
        <name>Timer</name>
        <qualifiedname>hmap::Timer::Timer</qualifiedname>
        <param>
          <type>const <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="171" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Timer_1ac4a8b38de95300def59daa998746c56f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>Timer &amp; hmap::Timer::operator=</definition>
        <argsstring>(const Timer &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>hmap::Timer::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/dbg/timer.hpp" line="172" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> class is a singleton that manages multiple Recorders and provides an interface for timing events. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> class allows you to measure the duration of multiple events by using start and stop commands. Each event is identified by a unique name. The <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> class maintains a collection of these events and their corresponding durations. The class is designed as a singleton, meaning only one instance of <ref refid="classhmap_1_1Timer" kindref="compound">Timer</ref> will exist throughout the lifetime of the program.</para>
<sect3 id="classhmap_1_1Timer_1autotoc_md0">
<title>Usage Example:</title>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>timing<sp/>an<sp/>event<sp/>named<sp/>&quot;step<sp/>1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhmap_1_1Timer_1ae9248cf01bfd4d8f680a6c7d5b80f45b" kindref="member">Timer::Start</ref>(</highlight><highlight class="stringliteral">&quot;step<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>some<sp/>work<sp/>here...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>timing<sp/>the<sp/>event<sp/>named<sp/>&quot;step<sp/>1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhmap_1_1Timer_1a6054c197a10338a1bd48299be29593b5" kindref="member">Timer::Stop</ref>(</highlight><highlight class="stringliteral">&quot;step<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>and<sp/>stop<sp/>another<sp/>event<sp/>Timer::Start(&quot;step<sp/>2&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>more<sp/>work<sp/>here...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhmap_1_1Timer_1a6054c197a10338a1bd48299be29593b5" kindref="member">Timer::Stop</ref>(</highlight><highlight class="stringliteral">&quot;step<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>the<sp/>timing<sp/>results<sp/>for<sp/>all<sp/>recorded<sp/>events<sp/>Timer::Dump();</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
</sect3>
    </detaileddescription>
    <location file="HighMap/include/highmap/dbg/timer.hpp" line="102" column="1" bodyfile="HighMap/include/highmap/dbg/timer.hpp" bodystart="103" bodyend="182"/>
    <listofallmembers>
      <member refid="classhmap_1_1Timer_1a36e7f8cbc2e057e612d5ae75708bd047" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>current_level</name></member>
      <member refid="classhmap_1_1Timer_1a0a43e982ca540f6aef0431e5c826d73a" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>data</name></member>
      <member refid="classhmap_1_1Timer_1a5bc931885a549c561740f39cea91dd5f" prot="public" virt="non-virtual"><scope>hmap::Timer</scope><name>Dump</name></member>
      <member refid="classhmap_1_1Timer_1a481d5be843951470a8e097d57a64710a" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>dump</name></member>
      <member refid="classhmap_1_1Timer_1a576626db87904b2c0937e8441fee866f" prot="public" virt="non-virtual"><scope>hmap::Timer</scope><name>get_instance</name></member>
      <member refid="classhmap_1_1Timer_1ae06258adb9e67342e56835291be5226f" prot="public" virt="non-virtual"><scope>hmap::Timer</scope><name>get_records</name></member>
      <member refid="classhmap_1_1Timer_1ac4a8b38de95300def59daa998746c56f" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>operator=</name></member>
      <member refid="classhmap_1_1Timer_1a8c20307901af959c421349c957149edf" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>records</name></member>
      <member refid="classhmap_1_1Timer_1aac51dbbcb2b7ea63765c0f95764f27cb" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>sid</name></member>
      <member refid="classhmap_1_1Timer_1ae9248cf01bfd4d8f680a6c7d5b80f45b" prot="public" virt="non-virtual"><scope>hmap::Timer</scope><name>Start</name></member>
      <member refid="classhmap_1_1Timer_1a66f4e7acf993ec753be07068df3b04f7" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>start</name></member>
      <member refid="classhmap_1_1Timer_1a6054c197a10338a1bd48299be29593b5" prot="public" virt="non-virtual"><scope>hmap::Timer</scope><name>Stop</name></member>
      <member refid="classhmap_1_1Timer_1ab70219d97b7645acbe66d8f561a20002" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>stop</name></member>
      <member refid="classhmap_1_1Timer_1a4c0ef1d1db349e81c10e02fe0ac1f7c6" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>Timer</name></member>
      <member refid="classhmap_1_1Timer_1a9196eeb51f985b033772f417479b1e4a" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>Timer</name></member>
      <member refid="classhmap_1_1Timer_1afc99134cd46af9daf06e839e00aa3377" prot="private" virt="non-virtual"><scope>hmap::Timer</scope><name>~Timer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
