<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classhmap_1_1Tensor" kind="class" language="C++" prot="public">
    <compoundname>hmap::Tensor</compoundname>
    <includes refid="tensor_8hpp" local="no">tensor.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classhmap_1_1Tensor_1a908df75bf79098e9c44773865022e823" prot="public" static="no" mutable="no">
        <type><ref refid="structhmap_1_1Vec3" kindref="compound">Vec3</ref>&lt; int &gt;</type>
        <definition>Vec3&lt;int&gt; hmap::Tensor::shape</definition>
        <argsstring></argsstring>
        <name>shape</name>
        <qualifiedname>hmap::Tensor::shape</qualifiedname>
        <briefdescription>
<para>Shape of the tensor in 3D space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="42" column="8" bodyfile="HighMap/include/highmap/tensor.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhmap_1_1Tensor_1acf16755884baf3252e48e6989846d91f" prot="public" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; hmap::Tensor::vector</definition>
        <argsstring></argsstring>
        <name>vector</name>
        <qualifiedname>hmap::Tensor::vector</qualifiedname>
        <briefdescription>
<para>Flattened vector containing the tensor&apos;s elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="47" column="15" bodyfile="HighMap/include/highmap/tensor.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classhmap_1_1Tensor_1af28dd5f54026bd09f8ef33d4319b816b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hmap::Tensor::Tensor</definition>
        <argsstring>(Vec3&lt; int &gt; shape)</argsstring>
        <name>Tensor</name>
        <qualifiedname>hmap::Tensor::Tensor</qualifiedname>
        <param>
          <type><ref refid="structhmap_1_1Vec3" kindref="compound">Vec3</ref>&lt; int &gt;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classhmap_1_1Tensor" kindref="compound">Tensor</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>3D shape of the tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="54" column="3" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a767c4e297a0ab687fbcb181598248597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hmap::Tensor::Tensor</definition>
        <argsstring>(Vec2&lt; int &gt; shape_xy, int shape_z)</argsstring>
        <name>Tensor</name>
        <qualifiedname>hmap::Tensor::Tensor</qualifiedname>
        <param>
          <type><ref refid="structhmap_1_1Vec2" kindref="compound">Vec2</ref>&lt; int &gt;</type>
          <declname>shape_xy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shape_z</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classhmap_1_1Tensor" kindref="compound">Tensor</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape_xy</parametername>
</parameternamelist>
<parameterdescription>
<para>2D shape (x, y) of the tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape_z</parametername>
</parameternamelist>
<parameterdescription>
<para>Size along the z-axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="62" column="3" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a8204c890b1f99c0cc60caed438f00ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hmap::Tensor::Tensor</definition>
        <argsstring>(const std::string &amp;fname)</argsstring>
        <name>Tensor</name>
        <qualifiedname>hmap::Tensor::Tensor</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="classhmap_1_1Tensor" kindref="compound">Tensor</ref> object from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to load the tensor from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="69" column="3" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="27" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a936e719c02f701ce86798533bdacba6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float &amp; hmap::Tensor::operator()</definition>
        <argsstring>(int i, int j, int k)</argsstring>
        <name>operator()</name>
        <qualifiedname>hmap::Tensor::operator()</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Access an element of the tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index along the x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Index along the y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Index along the z-axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float&amp; Reference to the element at position (i, j, k). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="79" column="9" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a51b96b5a128aaa910d85df8d1de85699" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float &amp; hmap::Tensor::operator()</definition>
        <argsstring>(int i, int j, int k) const</argsstring>
        <name>operator()</name>
        <qualifiedname>hmap::Tensor::operator()</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Access an element of the tensor (const version). </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index along the x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Index along the y-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Index along the z-axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const float&amp; Reference to the element at position (i, j, k). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="89" column="15" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a59e7ac9122e705d05f6e8b00a26ef738" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhmap_1_1Array" kindref="compound">Array</ref></type>
        <definition>Array hmap::Tensor::get_slice</definition>
        <argsstring>(int k) const</argsstring>
        <name>get_slice</name>
        <qualifiedname>hmap::Tensor::get_slice</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Get a 2D slice of the tensor along the z-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Index along the z-axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <ref refid="classhmap_1_1Array" kindref="compound">Array</ref> representing the 2D slice of the tensor at the specified z-axis index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="98" column="9" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a61599497cbeaddf588b012eff837ad52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float hmap::Tensor::max</definition>
        <argsstring>() const</argsstring>
        <name>max</name>
        <qualifiedname>hmap::Tensor::max</qualifiedname>
        <briefdescription>
<para>Find the maximum value in the tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float Maximum value in the tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="105" column="9" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a4be64dae294cbe5d822ecb0717dad1bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float hmap::Tensor::min</definition>
        <argsstring>() const</argsstring>
        <name>min</name>
        <qualifiedname>hmap::Tensor::min</qualifiedname>
        <briefdescription>
<para>Find the minimum value in the tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float Minimum value in the tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="112" column="9" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a00ae31f5e6fa479a7f6a18444e4777cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Tensor::remap</definition>
        <argsstring>(float vmin=0.f, float vmax=1.f)</argsstring>
        <name>remap</name>
        <qualifiedname>hmap::Tensor::remap</qualifiedname>
        <param>
          <type>float</type>
          <declname>vmin</declname>
          <defval>0.<ref refid="distance__transform_8cpp_1abcb9259cf91bfd25e92a72cdf18c285e" kindref="member">f</ref></defval>
        </param>
        <param>
          <type>float</type>
          <declname>vmax</declname>
          <defval>1.<ref refid="distance__transform_8cpp_1abcb9259cf91bfd25e92a72cdf18c285e" kindref="member">f</ref></defval>
        </param>
        <briefdescription>
<para>Remap the tensor values to a new range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vmin</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum value of the new range (default is 0.0). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vmax</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum value of the new range (default is 1.0). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="120" column="8" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="84" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1aeba89ed52aeff17783967e7d386336d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhmap_1_1Tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor hmap::Tensor::resample_to_shape_xy</definition>
        <argsstring>(Vec2&lt; int &gt; new_shape_xy)</argsstring>
        <name>resample_to_shape_xy</name>
        <qualifiedname>hmap::Tensor::resample_to_shape_xy</qualifiedname>
        <param>
          <type><ref refid="structhmap_1_1Vec2" kindref="compound">Vec2</ref>&lt; int &gt;</type>
          <declname>new_shape_xy</declname>
        </param>
        <briefdescription>
<para>Resamples the tensor to a new 2D shape (x, y), shape along z is not changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_shape_xy</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D vector representing the new shape (x, y) of the tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classhmap_1_1Tensor" kindref="compound">Tensor</ref> object with the resampled shape. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="130" column="10" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="97" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1aaf3d0e4ca2dcb231210a4b4745777c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Tensor::set_slice</definition>
        <argsstring>(int k, const Array &amp;slice)</argsstring>
        <name>set_slice</name>
        <qualifiedname>hmap::Tensor::set_slice</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="classhmap_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
<para>Set a 2D slice of the tensor along the z-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Index along the z-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>The 2D array (slice) to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="138" column="8" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1ac267c454e16d1445696ffa5ad2b32cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cv::Mat</type>
        <definition>cv::Mat hmap::Tensor::to_cv_mat</definition>
        <argsstring>()</argsstring>
        <name>to_cv_mat</name>
        <qualifiedname>hmap::Tensor::to_cv_mat</qualifiedname>
        <briefdescription>
<para>Convert the tensor to an OpenCV matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>cv::Mat OpenCV matrix representing the tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="145" column="11" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="119" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1a97bc4a15725b74b3b7de6a2152813cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt; uint8_t &gt; hmap::Tensor::to_img_8bit</definition>
        <argsstring>()</argsstring>
        <name>to_img_8bit</name>
        <qualifiedname>hmap::Tensor::to_img_8bit</qualifiedname>
        <briefdescription>
<para>Convert the tensor to an 8-bit image represented as a vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::vector&lt;uint8_t&gt; Vector containing the 8-bit image data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="152" column="15" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="149" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classhmap_1_1Tensor_1afe46210c8fa2c76229cc4099d63f237e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hmap::Tensor::to_png</definition>
        <argsstring>(const std::string &amp;fname, int depth=CV_8U)</argsstring>
        <name>to_png</name>
        <qualifiedname>hmap::Tensor::to_png</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
          <defval>CV_8U</defval>
        </param>
        <briefdescription>
<para>Saves the <ref refid="classhmap_1_1Tensor" kindref="compound">Tensor</ref> as a PNG image file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function converts the <ref refid="classhmap_1_1Tensor" kindref="compound">Tensor</ref> into a <computeroutput>cv::Mat</computeroutput> object and then saves it as a PNG image file. The image can be saved in either 8-bit or 16-bit depth, based on the <computeroutput>depth</computeroutput> parameter. The image is rotated 90 degrees counterclockwise before saving.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename for the output PNG image, including the path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The bit depth of the output image. The default is 8-bit (<computeroutput>CV_8U</computeroutput>). Set to <computeroutput>CV_16U</computeroutput> for 16-bit output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HighMap/include/highmap/tensor.hpp" line="166" column="8" bodyfile="HighMap/src/tensor/tensor.cpp" bodystart="140" bodyend="147"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class to represent a multi-dimensional tensor. </para>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput><ref refid="classhmap_1_1Tensor" kindref="compound">Tensor</ref></computeroutput> class is used to store and manipulate multi-dimensional arrays (tensors) of floating-point numbers. It supports element access, basic operations such as finding the minimum and maximum values, remapping the tensor values, and exporting the data to images. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>hmap::Vec3&lt; int &gt;</label>
        <link refid="structhmap_1_1Vec3"/>
      </node>
      <node id="1">
        <label>hmap::Tensor</label>
        <link refid="classhmap_1_1Tensor"/>
        <childnode refid="2" relation="usage">
          <edgelabel>shape</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>vector</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; float &gt;</label>
      </node>
    </collaborationgraph>
    <location file="HighMap/include/highmap/tensor.hpp" line="36" column="1" bodyfile="HighMap/include/highmap/tensor.hpp" bodystart="37" bodyend="167"/>
    <listofallmembers>
      <member refid="classhmap_1_1Tensor_1a59e7ac9122e705d05f6e8b00a26ef738" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>get_slice</name></member>
      <member refid="classhmap_1_1Tensor_1a61599497cbeaddf588b012eff837ad52" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>max</name></member>
      <member refid="classhmap_1_1Tensor_1a4be64dae294cbe5d822ecb0717dad1bb" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>min</name></member>
      <member refid="classhmap_1_1Tensor_1a936e719c02f701ce86798533bdacba6d" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>operator()</name></member>
      <member refid="classhmap_1_1Tensor_1a51b96b5a128aaa910d85df8d1de85699" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>operator()</name></member>
      <member refid="classhmap_1_1Tensor_1a00ae31f5e6fa479a7f6a18444e4777cc" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>remap</name></member>
      <member refid="classhmap_1_1Tensor_1aeba89ed52aeff17783967e7d386336d9" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>resample_to_shape_xy</name></member>
      <member refid="classhmap_1_1Tensor_1aaf3d0e4ca2dcb231210a4b4745777c7b" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>set_slice</name></member>
      <member refid="classhmap_1_1Tensor_1a908df75bf79098e9c44773865022e823" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>shape</name></member>
      <member refid="classhmap_1_1Tensor_1af28dd5f54026bd09f8ef33d4319b816b" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>Tensor</name></member>
      <member refid="classhmap_1_1Tensor_1a767c4e297a0ab687fbcb181598248597" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>Tensor</name></member>
      <member refid="classhmap_1_1Tensor_1a8204c890b1f99c0cc60caed438f00ee0" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>Tensor</name></member>
      <member refid="classhmap_1_1Tensor_1ac267c454e16d1445696ffa5ad2b32cb6" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>to_cv_mat</name></member>
      <member refid="classhmap_1_1Tensor_1a97bc4a15725b74b3b7de6a2152813cad" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>to_img_8bit</name></member>
      <member refid="classhmap_1_1Tensor_1afe46210c8fa2c76229cc4099d63f237e" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>to_png</name></member>
      <member refid="classhmap_1_1Tensor_1acf16755884baf3252e48e6989846d91f" prot="public" virt="non-virtual"><scope>hmap::Tensor</scope><name>vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
